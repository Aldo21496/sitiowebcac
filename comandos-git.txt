git config --global user.name "Reinaldo Carlos"
git config --global user.email aldo21406@gmail.com
Esto es necesario para configurar git recien instalado

git log
git log --oneline
git log -p
Esto es necesario para ver los commits
git log --author="user_name"
para ver mas informacion del autor
git log --since=1.month.ago --until=1.day.ago
En el comando anterior, estamos buscando las informaciones del commit desde hace un mes hasta hace un d√≠a.
git log --pretty="format:%h %s"
para dar formato a la salida de git log


git clone https://github.com/Aldo21496/sitiowebcac.git
Es un ejemplo de como clonar un repositorio git, previamente crear las carpetas para organizar los proyectos.

git clone <repositorio> <mi-proyecto-clone>
solo clona una carpeta especifica

git clone -branch new_feature <repositorio>
solo clona desde otra rama o branch

git status
nos muestra los archivos con cambios
git add . 
nos agrega todos los archivos modificados sino poner en vez de punto solo el archivo
luego hacer 
git commit -m "aqui lo que hiciste"
en en el mensaje usar el verbo primero crea o agrega o corrige etc

git push 
Esto hace que se envien los cambios, pedira tu usuario de github y el token generado 
para que no pida en cada momento que usemos git push usar los siguiente
git config --global credential.helper cache
y para eliminar el token usar
git config --global --unset credential.helper

git diff archivo.ext
muestra las modificaciones

para restaurar una version anterior poner
git log --oneline
nos da un listado de los commits y nos fijamos el hash
luego poner
git restore --source el-hash archivo.ext

trabajo en equipo
git branch
para saber en que rama nos encontramos
git switch -p rama-nueva
git switch master

git push origen rama-actual
porque nos encontramos en otra rama y debemos hacer referencia a la rama master

